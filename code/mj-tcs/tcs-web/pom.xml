<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>mj-tcs</artifactId>
        <groupId>com.mj.tcs</groupId>
        <version>1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <name>${project.artifactId} ${project.version}</name>

    <artifactId>tcs-web</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>

    <properties>
        <start-class>com.mj.tcs.TCSWebServerApplication</start-class>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <spring.version>1.2.7.RELEASE</spring.version>
        <spring.messaging.version>4.1.8.RELEASE</spring.messaging.version>
    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>external-jars-repo</id>
            <url>file://${project.basedir}/src/main/resources/lib</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>com.mj.tcs</groupId>
            <artifactId>tcs-base</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>com.mj.tcs</groupId>
            <artifactId>tcs-kernel</artifactId>
            <version>1.0</version>
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/src/main/resources/lib/tcs-kernel-1.0.jar</systemPath>-->
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-freemarker</artifactId>-->
        <!--</dependency>-->

        <!-- templating -->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-thymeleaf</artifactId>-->
        <!--</dependency>-->
        <!--&lt;!&ndash; adds template integration with spring security - allows sec: attributed to work (automatic SpringSecurityDialect) &ndash;&gt;-->
        <!--<dependency>-->
        <!--<groupId>org.thymeleaf.extras</groupId>-->
        <!--<artifactId>thymeleaf-extras-springsecurity4</artifactId>-->
        <!--<version>3.0.0.BETA01</version>-->
        <!--</dependency>-->

        <!-- security and oauth -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- OAuth -->
        <!--<dependency>-->
        <!--<groupId>org.springframework.security.oauth</groupId>-->
        <!--<artifactId>spring-security-oauth</artifactId>-->
        <!--<version>2.0.2.RELEASE</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.springframework.security.oauth</groupId>-->
        <!--<artifactId>spring-security-oauth2</artifactId>-->
        <!--<version>2.0.2.RELEASE</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- FOR WAR Packaging -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!-- Intellij only!!! -->
            <scope>compile</scope>
            <!--<scope>provided</scope>-->
        </dependency>

        <!--JSP Use  -->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <!-- Intellij only!!! -->
            <scope>compile</scope>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-data-rest</artifactId>-->
        <!--</dependency>-->

        <!-- Websocket -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
            <version>${spring.messaging.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.0-b01</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.hibernate.javax.persistence</groupId>-->
            <!--<artifactId>hibernate-jpa-2.0-api</artifactId>-->
            <!--<version>1.0.0.Final</version>-->
            <!--&lt;!&ndash;<version>4.2.1.Final</version>&ndash;&gt;-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.hateoas</groupId>
            <artifactId>spring-hateoas</artifactId>
            <version>0.18.0.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>org.apache.commons.collections</artifactId>
            <version>3.2.1</version>
        </dependency>
        <!--<dependency>
            <groupId>apache-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.1</version>
        </dependency>-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>
        <dependency>
            <groupId>com.inspire-software.lib.dto.geda</groupId>
            <artifactId>geda.core</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.inspire-software.lib.dto.geda</groupId>
            <artifactId>geda.spring-integration</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.2</version>
        </dependency>
        <!--
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- for testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
		        <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <!-- 释放将项目的类文件打成jar放到lib目录中。
                打成jar的好处是：只修改class时，可以只更新jar。 -->
                    <archiveClasses>true</archiveClasses>
                    <webResources>
                        <!--
                            src/main/resources是默认的资源目录。
                            当archiveClasses=true时，resources中的文件资源会被打到jar中；
                            当archiveClasses=false时，resources中的文件资源在war的根目录。
                        -->
                        <resource>
                            <!-- config作为source folder，不会被打到jar中。 -->
                            <directory>src/main/resources/lib</directory>
                            <targetPath>WEB-INF/lib</targetPath>
                            <!--<filtering>true</filtering>-->
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.2.7.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.mj.tcs.TCSWebServerApplication</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
